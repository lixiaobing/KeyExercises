{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "var Const = require(\"Const\")\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        letterPrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        bulletPrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        // 星星产生后消失时间的随机范围\r\n        maxStarDuration: 0,\r\n        minStarDuration: 0,\r\n        // 地面节点，用于确定星星生成的高度\r\n        ground: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        // player 节点，用于获取主角弹跳的高度，和控制主角行动开关\r\n        player: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        // score label 的引用\r\n        scoreDisplay: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        // 得分音效资源\r\n        scoreAudio: {\r\n            default: null,\r\n            url: cc.AudioClip\r\n        },\r\n\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        console.log(\"Const keyCodes length = \"+Const.keyCodes.length);\r\n        // 获取地平面的 y 轴坐标\r\n        this.groundY = this.ground.y + this.ground.height/2;\r\n        // 初始化计时器\r\n        this.timer = 0;\r\n        this.starDuration = 0;\r\n        // 初始化计分\r\n        this.score = 0;\r\n        //\r\n        this.keyCode = 0;\r\n        //\r\n        this.letterTimer = 0;\r\n        \r\n        this.addKeyListener();\r\n    },\r\n    randomKeyCode: function()\r\n    {\r\n        var index =  Math.floor(cc.rand())%Const.keyCodes.length;\r\n        console.log(\"random:\"+ index)  ;\r\n        return Const.keyCodes[index];\r\n    },\r\n    // called every frame\r\n    update: function (dt) {\r\n        this.timer += dt;\r\n        //字母生成\r\n        this.letterTimer+= dt;\r\n        if (this.letterTimer > 2.0) \r\n        {\r\n            this.createLetter();\r\n            console.log(\"this.letterTimer:\"+this.letterTimer);\r\n            this.letterTimer = 0;\r\n        }\r\n    \r\n    },\r\n    getScore: function (level) {\r\n        switch(level)\r\n        {\r\n            case 1:\r\n                return 1;\r\n            case 2:\r\n                return 2;\r\n            case 3:\r\n                return 3;\r\n            case 4:\r\n                return 4;    \r\n        }\r\n        return 1;\r\n    },\r\n\r\n\r\n    addScore: function (level) {\r\n        this.score += this.getScore(level);\r\n        this.scoreDisplay.string = 'Score: ' + this.score.toString();\r\n        cc.audioEngine.playEffect(this.scoreAudio, false);\r\n    },\r\n\r\n    gameOver: function () {\r\n        this.player.stopAllActions(); //停止 player 节点的跳跃动作\r\n        cc.director.loadScene('game');\r\n    },\r\n    \r\n    createLetter: function() {  //生成一个字母\r\n        // 使用给定的模板在场景中生成一个新节点\r\n        var letter = cc.instantiate(this.letterPrefab);\r\n        //将新增的节点添加到 Canvas 节点下面\r\n         this.node.addChild(letter);\r\n        letter.setPosition(this.randomLetterPosition());\r\n        var letComponent = letter.getComponent('Letter');\r\n        letComponent.init(this.randomKeyCode(),1,this);\r\n    },\r\n    \r\n    randomLetterPosition: function () {\r\n        var randX = cc.randomMinus1To1() * (this.node.width/2);\r\n        return cc.p(randX, this.node.height/2);\r\n    },\r\n    addKeyListener: function () {\r\n         var self = this;\r\n        cc.eventManager.addListener({\r\n            event: cc.EventListener.KEYBOARD,\r\n            onKeyPressed: function(keyCode, event) {\r\n                self.keyCode = keyCode;\r\n                console.log(\"do keyCode:\"+keyCode);\r\n            },\r\n            onKeyReleased: function(keyCode, event) {\r\n                self.keyCode = 0;\r\n            }\r\n        }, this.node);\r\n    }\r\n    \r\n});\r\n"
  ]
}